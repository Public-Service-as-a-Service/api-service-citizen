openapi: 3.0.1
info:
  title: api-citizen
  contact: {}
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  version: "1.0"
servers:
  - url: http://localhost:8081
    description: Generated server url
tags:
  - name: Citizen
    description: Show information about Citizens
paths:
  /api/v2/citizen/guid:
    post:
      tags:
        - Citizen
      summary: Create person
      operationId: createPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelPostPerson"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api/v2/citizen/guid/batch:
    post:
      tags:
        - Citizen
      summary: Get an array of personIds from Personal identity numbers
      operationId: getPersonIdsBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PersonGuidBatch"
  /api/v2/citizen/batch:
    post:
      tags:
        - Citizen
      summary: Show information about list of citizens
      operationId: getCitizensBatch
      parameters:
        - name: showClassified
          in: query
          description: "If true, include search for classified persons"
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CitizenExtended"
  /api/v2/citizen/{personNumber}/guid:
    get:
      tags:
        - Citizen
      summary: Get the personId from Personal identity number
      operationId: getPersonIdByPersonalNumber
      parameters:
        - name: personNumber
          in: path
          description: Personal identity number for specific citizen
          required: true
          schema:
            type: string
        - name: municipalityId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api/v2/citizen/{personId}:
    get:
      tags:
        - Citizen
      summary: Show information about specific citizen
      operationId: getCitizenById
      parameters:
        - name: personId
          in: path
          description: ID for specific citizen
          required: true
          schema:
            type: string
        - name: showClassified
          in: query
          description: "If true, include search for classified persons"
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitizenExtended"
        "204":
          description: No Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitizenExtended"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api/v2/citizen/{personId}/personnumber:
    get:
      tags:
        - Citizen
      summary: Get Personal identity number from personId
      operationId: getPersonalNumberById
      parameters:
        - name: personId
          in: path
          description: "personID, Guid, for specific citizen"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api/v2/citizen/changedaddress:
    get:
      tags:
        - Citizen
      summary: Show citizens that have moved since the given date
      operationId: getCitizensWithChangedAddress
      parameters:
        - name: changedDateFrom
          in: query
          description: From-date for move
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CitizenWithChangedAddress"
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CitizenWithChangedAddress"
        "400":
          description: Bad Request
          content:
            application/problem+json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Problem"
                  - $ref: "#/components/schemas/ConstraintViolationProblem"
        "500":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "503":
          description: Server Error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /api-docs:
    get:
      tags:
        - API
      summary: OpenAPI
      operationId: getApiDocs
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: string
      x-auth-type: None
      x-throttling-tier: Unlimited
      x-wso2-mutual-ssl: Optional
components:
  schemas:
    ModelPostPerson:
      type: object
      properties:
        personalNumber:
          type: string
          description: Personal identity number for the person
          example: "198001011234"
      description: Model for posting a new person
    Problem:
      type: object
      properties:
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
    StatusType:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    ConstraintViolationProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        type:
          type: string
          format: uri
        status:
          $ref: "#/components/schemas/StatusType"
        violations:
          type: array
          items:
            $ref: "#/components/schemas/Violation"
        title:
          type: string
        message:
          type: string
        instance:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    ThrowableProblem:
      type: object
      properties:
        cause:
          $ref: "#/components/schemas/ThrowableProblem"
        stackTrace:
          type: array
          items:
            type: object
            properties:
              classLoaderName:
                type: string
              moduleName:
                type: string
              moduleVersion:
                type: string
              methodName:
                type: string
              fileName:
                type: string
              lineNumber:
                type: integer
                format: int32
              className:
                type: string
              nativeMethod:
                type: boolean
        message:
          type: string
        instance:
          type: string
          format: uri
        type:
          type: string
          format: uri
        parameters:
          type: object
          additionalProperties:
            type: object
        status:
          $ref: "#/components/schemas/StatusType"
        title:
          type: string
        detail:
          type: string
        suppressed:
          type: array
          items:
            type: object
            properties:
              stackTrace:
                type: array
                items:
                  type: object
                  properties:
                    classLoaderName:
                      type: string
                    moduleName:
                      type: string
                    moduleVersion:
                      type: string
                    methodName:
                      type: string
                    fileName:
                      type: string
                    lineNumber:
                      type: integer
                      format: int32
                    className:
                      type: string
                    nativeMethod:
                      type: boolean
              message:
                type: string
              localizedMessage:
                type: string
        localizedMessage:
          type: string
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    PersonGuidBatch:
      type: object
      properties:
        personNumber:
          type: string
          description: Personal number
          nullable: true
        personId:
          type: string
          description: Person ID
          format: uuid
          nullable: true
        success:
          type: boolean
          description: Success status
        errorMessage:
          type: string
          description: Error message if operation failed
          nullable: true
      description: Person GUID batch response model
    CitizenAddress:
      type: object
      properties:
        status:
          type: string
          description: Status
          nullable: true
        nrDate:
          type: string
          description: NR date
          nullable: true
        realEstateDescription:
          type: string
          description: Real estate description
          nullable: true
        co:
          type: string
          description: Care of address
          nullable: true
        address:
          type: string
          description: Address
          nullable: true
        addressArea:
          type: string
          description: Address area
          nullable: true
        addressNumber:
          type: string
          description: Address number
          nullable: true
        addressLetter:
          type: string
          description: Address letter
          nullable: true
        apartmentNumber:
          type: string
          description: Apartment number
          nullable: true
        postalCode:
          type: string
          description: Postal code
          nullable: true
        city:
          type: string
          description: City
          nullable: true
        county:
          type: string
          description: County
          nullable: true
        municipality:
          type: string
          description: Municipality
          nullable: true
        country:
          type: string
          description: Country
          nullable: true
        emigrated:
          type: boolean
          description: Emigrated status
          nullable: true
        addressType:
          type: string
          description: Address type
          nullable: true
        ycoordLocal:
          type: number
          format: double
        xcoordLocal:
          type: number
          format: double
      description: Citizen address model
    CitizenExtended:
      type: object
      properties:
        personId:
          type: string
          description: Person ID (UUID)
          format: uuid
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        givenname:
          type: string
          description: Given name (förnamn)
          example: Anders
        lastname:
          type: string
          description: Last name (efternamn)
          example: Andersson
        gender:
          type: string
          description: Gender
          example: FEMALE
        civilStatus:
          type: string
          description: Civil status
          example: MARRIED
        nrDate:
          type: string
          description: NR date
        personalNumber:
          type: string
          description: Personal Number
          example: 20001212-1212
        classified:
          type: string
          description: Classification status
          example: PROTECTED
        protectedNr:
          type: string
          description: Protection level
          example: PROTECTED_IDENTITY
        addresses:
          type: array
          description: Addresses
          items:
            $ref: "#/components/schemas/CitizenAddress"
      description: Citizen model
    CitizenWithChangedAddress:
      type: object
      properties:
        personId:
          type: string
          description: Person ID
          format: uuid
          example: b82bd8ac-1507-4d9a-958d-369261eecc15
        personNumber:
          type: string
          description: Personal number
          nullable: true
        classified:
          type: string
          description: Classification status
          nullable: true
        unRegCode:
          type: string
          description: Unregistration code
          nullable: true
        unRegDate:
          type: string
          description: Unregistration date
          nullable: true
        gender:
          type: string
          description: Gender
          nullable: true
        givenname:
          type: string
          description: Given name
          nullable: true
        lastname:
          type: string
          description: Last name
          nullable: true
        typeOfSchool:
          type: string
          description: Type of school
          nullable: true
        addresses:
          type: array
          description: Addresses
          nullable: true
          items:
            $ref: "#/components/schemas/CitizenAddress"
      description: Citizen with changed address model
  securitySchemes: {}
